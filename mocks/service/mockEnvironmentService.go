// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ferrandinand/cwh-api/service (interfaces: EnvironmentService)

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	dto "github.com/ferrandinand/cwh-api/dto"
	errs "github.com/ferrandinand/cwh-lib/errs"
	gomock "github.com/golang/mock/gomock"
)

// MockEnvironmentService is a mock of EnvironmentService interface.
type MockEnvironmentService struct {
	ctrl     *gomock.Controller
	recorder *MockEnvironmentServiceMockRecorder
}

// MockEnvironmentServiceMockRecorder is the mock recorder for MockEnvironmentService.
type MockEnvironmentServiceMockRecorder struct {
	mock *MockEnvironmentService
}

// NewMockEnvironmentService creates a new mock instance.
func NewMockEnvironmentService(ctrl *gomock.Controller) *MockEnvironmentService {
	mock := &MockEnvironmentService{ctrl: ctrl}
	mock.recorder = &MockEnvironmentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvironmentService) EXPECT() *MockEnvironmentServiceMockRecorder {
	return m.recorder
}

// GetAllEnvironment mocks base method.
func (m *MockEnvironmentService) GetAllEnvironment(arg0 int, arg1 string, arg2 int) (dto.EnvironmentResponseList, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllEnvironment", arg0, arg1, arg2)
	ret0, _ := ret[0].(dto.EnvironmentResponseList)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetAllEnvironment indicates an expected call of GetAllEnvironment.
func (mr *MockEnvironmentServiceMockRecorder) GetAllEnvironment(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllEnvironment", reflect.TypeOf((*MockEnvironmentService)(nil).GetAllEnvironment), arg0, arg1, arg2)
}

// GetEnvironment mocks base method.
func (m *MockEnvironmentService) GetEnvironment(arg0 string) (*dto.EnvironmentResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvironment", arg0)
	ret0, _ := ret[0].(*dto.EnvironmentResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetEnvironment indicates an expected call of GetEnvironment.
func (mr *MockEnvironmentServiceMockRecorder) GetEnvironment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvironment", reflect.TypeOf((*MockEnvironmentService)(nil).GetEnvironment), arg0)
}

// NewEnvironment mocks base method.
func (m *MockEnvironmentService) NewEnvironment(arg0 dto.NewEnvironmentRequest) (*dto.EnvironmentResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewEnvironment", arg0)
	ret0, _ := ret[0].(*dto.EnvironmentResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// NewEnvironment indicates an expected call of NewEnvironment.
func (mr *MockEnvironmentServiceMockRecorder) NewEnvironment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewEnvironment", reflect.TypeOf((*MockEnvironmentService)(nil).NewEnvironment), arg0)
}
