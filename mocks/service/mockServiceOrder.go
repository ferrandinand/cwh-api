// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ferrandinand/cwh-api/service (interfaces: ServiceOrder)

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	dto "github.com/ferrandinand/cwh-api/dto"
	errs "github.com/ferrandinand/cwh-lib/errs"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceOrder is a mock of ServiceOrder interface.
type MockServiceOrder struct {
	ctrl     *gomock.Controller
	recorder *MockServiceOrderMockRecorder
}

// MockServiceOrderMockRecorder is the mock recorder for MockServiceOrder.
type MockServiceOrderMockRecorder struct {
	mock *MockServiceOrder
}

// NewMockServiceOrder creates a new mock instance.
func NewMockServiceOrder(ctrl *gomock.Controller) *MockServiceOrder {
	mock := &MockServiceOrder{ctrl: ctrl}
	mock.recorder = &MockServiceOrderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceOrder) EXPECT() *MockServiceOrderMockRecorder {
	return m.recorder
}

// GetEnvironmentServiceOrders mocks base method.
func (m *MockServiceOrder) GetEnvironmentServiceOrders(arg0 dto.ServiceOrderRequest) ([]dto.ServiceOrderResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvironmentServiceOrders", arg0)
	ret0, _ := ret[0].([]dto.ServiceOrderResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetEnvironmentServiceOrders indicates an expected call of GetEnvironmentServiceOrders.
func (mr *MockServiceOrderMockRecorder) GetEnvironmentServiceOrders(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvironmentServiceOrders", reflect.TypeOf((*MockServiceOrder)(nil).GetEnvironmentServiceOrders), arg0)
}

// GetServiceOrder mocks base method.
func (m *MockServiceOrder) GetServiceOrder(arg0 string) (*dto.ServiceOrderResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceOrder", arg0)
	ret0, _ := ret[0].(*dto.ServiceOrderResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetServiceOrder indicates an expected call of GetServiceOrder.
func (mr *MockServiceOrderMockRecorder) GetServiceOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceOrder", reflect.TypeOf((*MockServiceOrder)(nil).GetServiceOrder), arg0)
}

// NewServiceOrder mocks base method.
func (m *MockServiceOrder) NewServiceOrder(arg0 dto.NewServiceOrderRequest) (*dto.ServiceOrderResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewServiceOrder", arg0)
	ret0, _ := ret[0].(*dto.ServiceOrderResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// NewServiceOrder indicates an expected call of NewServiceOrder.
func (mr *MockServiceOrderMockRecorder) NewServiceOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewServiceOrder", reflect.TypeOf((*MockServiceOrder)(nil).NewServiceOrder), arg0)
}
